#version: "3.9"

x-data: &data
# Modify the paths before the ':' in next 4 lines to match your system
    volumes:
      - ${HOME}/exp:/exp
      - ${HOME}/unity-envs:/unity-envs
      - /data:/data # only needed if your exp, unity-envs or navsim folders are symlinked from here

x-code: &code
    volumes:
      - ${PWD}:/opt/navsim # only needed if you are developing navsim

x-exportx: &exportx
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY}:${XAUTHORITY}
      - $XDG_RUNTIME_DIR:$XDG_RUNTIME_DIR
      - /usr/share/vulkan/icd.d:/usr/share/vulkan/icd.d
    environment:
      - DISPLAY
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - XAUTHORITY
      - XDG_RUNTIME_DIR

x-deploy-nvidia: &deploy-nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              #device_ids: ['0', '3']
              capabilities: [gpu]

x-image: &img
    image: ${IMAGE:-ghcr.io/ucf-sttc/navsim/navsim:1.2.0}

services:
  runtime-base:
    <<: [*data, *img]
    working_dir: /exp
  
  runtime-base-x:
    extends:
      service: runtime-base
    <<: [*exportx, *deploy-nvidia]

  navsim:
    extends:
      service: runtime-base-x
    container_name: navsim
    command: bash -c "echo run the container with a navsim-command; navsim --help"

  navsim-test:
    extends:
      service: navsim
    command: bash -c "nvidia-smi; vulkaninfo; which python; python -V;
             which conda; conda -V; which mamba; mamba -V; echo 'torch.cuda:';
             python -c 'import torch; print(torch.cuda.is_available())'"

  navsim-dev:
    extends:
       service: navsim
    <<: [*code]
    command: bash -c "while sleep 1000; do :; done"

  navsim-build:
    <<: [*img]
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-navsim
      args:
        from: debian:11.6-slim        
        duid: ${DUID:-1000}
        dgid: ${DGID:-1000}

  navsim-fixid:
    <<: [*img]
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-navsim-fixid
      args: 
        <<: *img
        duid: ${DUID:-1000}
        dgid: ${DGID:-1000}

  nvidia-test:
    <<: [*deploy-nvidia, *exportx]
    image: debian:11.6-slim
    container_name: nvidia-test
    command: bash -c "nvidia-smi"